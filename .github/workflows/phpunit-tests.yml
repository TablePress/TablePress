name: PHPUnit Tests

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured at the job level.
permissions: {}

on:
  push:
    branches:
      - main
    paths:
      # Any change to a PHP file should run checks.
      - '**.php'
      # These files configure Composer. Changes could affect the outcome.
      - 'composer.*'
      # This file configures PHPUnit. Changes could affect the outcome.
      - 'phpunit.xml.dist'
      # Changes to workflow files should always verify all workflows are successful.
      - '.github/workflows/*.yml'
  pull_request:
    branches:
      - main
    paths:
      # Any change to a PHP file should run checks.
      - '**.php'
      # These files configure Composer. Changes could affect the outcome.
      - 'composer.*'
      # This file configures PHPUnit. Changes could affect the outcome.
      - 'phpunit.xml.dist'
      # Changes to workflow files should always verify all workflows are successful.
      - '.github/workflows/*.yml'
  schedule:
    - cron: '45 3 * * SUN'
  workflow_dispatch:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  # Runs the PHPUnit tests for TablePress.
  #
  # Performs the following steps:
  # - Sets up PHP.
  # - Logs debug information.
  # - Checks out the WordPress develop repository.
  # - Sets up the WordPress unit tests configuration.
  # - Checks out the TablePress repository.
  # - Installs Composer dependencies.
  # - Makes Composer packages available globally.
  # - Runs the PHPUnit tests.
  # - Ensures version-controlled files are not modified or deleted.

  phpunit:
    name: WP ${{ matrix.wp }}${{ matrix.multisite && ' multisite' || '' }}, PHP ${{ matrix.php }}
    if: github.repository == 'TablePress/TablePress'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      mariadb:
        image: mariadb:lts
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_tests
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval="10s"
          --health-timeout="5s"
          --health-retries="5"
    strategy:
      fail-fast: false
      matrix:
        wp:
          - trunk
          - '6.7'
          - '6.6'
          - '6.5'
          - '6.4'
          - '6.3'
          - '6.2'
        php:
          - '8.5'
          - '8.4'
          - '8.3'
          - '8.2'
          - '8.1'
          - '8.0'
          - '7.4'
        multisite: [ false, true ]
    env:
      PLUGIN_DIR: ./src/wp-content/plugins/tablepress

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: ${{ matrix.php }}
          coverage: none
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log debug information
        run: |
          composer --version

      - name: Checkout specified version of the WordPress development repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: WordPress/WordPress-develop
          ref: ${{ matrix.wp }}

      - name: Set up the WordPress unit tests configuration file
        run: |
          cp wp-tests-config-sample.php wp-tests-config.php
          sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
          sed -i "s/yourusernamehere/root/" wp-tests-config.php
          sed -i "s/yourpasswordhere/root/" wp-tests-config.php
          sed -i "s/localhost/127.0.0.1:3306/" wp-tests-config.php

      - name: Checkout TablePress repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: ${{ env.PLUGIN_DIR }}

      - name: Install Composer dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # v3.0.0
        with:
          composer-options: "--working-dir=${{ env.PLUGIN_DIR }}${{ ( matrix.php == '8.1' || matrix.php == '8.2' || matrix.php == '8.3' || matrix.php == '8.4' || matrix.php == '8.5' ) && ' --ignore-platform-reqs' || '' }}"

      - name: Make Composer packages available globally
        working-directory: ${{ env.PLUGIN_DIR }}
        run: echo "${PWD}/vendor/bin" >> $GITHUB_PATH

      - name: Run PHPUnit
        env:
          WP_TESTS_DIR: ${{ github.workspace }}/tests/phpunit/
          WP_VERSION: ${{ matrix.wp }}
          WP_MULTISITE: ${{ matrix.multisite && '1' || '0' }}
        working-directory: ${{ env.PLUGIN_DIR }}
        run: phpunit --verbose --exclude-group=ms-${{ matrix.multisite && 'excluded' || 'required' }}

      - name: Ensure version-controlled files are not modified or deleted
        working-directory: ${{ env.PLUGIN_DIR }}
        run: git diff --exit-code

  failed-workflow:
    name: Failed workflow tasks
    runs-on: ubuntu-latest
    permissions:
      actions: write
    needs: [ phpunit ]
    if: |
      always() &&
      github.event_name != 'pull_request' &&
      github.run_attempt < 2 &&
      (
        needs.phpunit.result == 'cancelled' || needs.phpunit.result == 'failure'
      )
    steps:
      - name: Dispatch workflow run
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'failed-workflow.yml',
              ref: 'main',
              inputs: {
                run_id: '${{ github.run_id }}'
              }
            });
